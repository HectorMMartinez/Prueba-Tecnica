generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ClienteTipo {
  regular
  vip
}

enum UsuarioRol {
  admin
  vendedor
}

model Fabricante {
  id        BigInt   @id @default(autoincrement())
  nombre    String   @unique @db.VarChar(120)
  createdAt DateTime @default(now())

  articulos Articulo[]
}

model Articulo {
  id           BigInt   @id @default(autoincrement())
  fabricanteId BigInt
  codigoBarras String   @unique @db.VarChar(64)
  descripcion  String?
  stock        Int      @default(0)
  createdAt    DateTime @default(now())

  fabricante   Fabricante   @relation(fields: [fabricanteId], references: [id], onDelete: Restrict)
  colocaciones Colocacion[]

  @@index([fabricanteId])
}

model Ubicacion {
  id        BigInt   @id @default(autoincrement())
  nombre    String   @unique @db.VarChar(120)
  createdAt DateTime @default(now())

  colocaciones Colocacion[]
}

model Colocacion {
  id             BigInt   @id @default(autoincrement())
  articuloId     BigInt
  ubicacionId    BigInt
  nombreExhibido String   @db.VarChar(200)
  precio         Decimal  @db.Decimal(12, 2)
  createdAt      DateTime @default(now())

  articulo  Articulo  @relation(fields: [articuloId], references: [id], onDelete: Cascade)
  ubicacion Ubicacion @relation(fields: [ubicacionId], references: [id], onDelete: Cascade)
  compras   Compra[]

  @@unique([articuloId, ubicacionId])
  @@index([articuloId])
  @@index([ubicacionId])
}

model Cliente {
  id        BigInt      @id @default(autoincrement())
  nombre    String      @db.VarChar(150)
  telefono  String?     @unique @db.VarChar(30)
  tipo      ClienteTipo @default(regular)
  createdAt DateTime    @default(now())

  compras Compra[]
}

model Compra {
  id           BigInt   @id @default(autoincrement())
  clienteId    BigInt
  colocacionId BigInt
  unidades     Int
  createdAt    DateTime @default(now())

  cliente    Cliente    @relation(fields: [clienteId], references: [id], onDelete: Restrict)
  colocacion Colocacion @relation(fields: [colocacionId], references: [id], onDelete: Restrict)

  @@unique([clienteId, colocacionId]) // acumulaci√≥n por par
  @@index([clienteId])
  @@index([colocacionId])
}

model Empleado {
  id         BigInt   @id @default(autoincrement())
  nombres    String   @db.VarChar(120)
  apellidos  String   @db.VarChar(120)
  cedula     String   @unique @db.VarChar(40)
  tipoSangre String?  @db.VarChar(5)
  telefono   String?  @db.VarChar(30)
  email      String?  @unique @db.VarChar(120)
  createdAt  DateTime @default(now())

  usuario Usuario?
}

model Usuario {
  id           BigInt     @id @default(autoincrement())
  username     String     @unique @db.VarChar(60)
  passwordHash String     @db.VarChar(255)
  rol          UsuarioRol @default(vendedor)
  empleadoId   BigInt?    @unique
  isActive     Boolean    @default(true)
  createdAt    DateTime   @default(now())

  empleado Empleado? @relation(fields: [empleadoId], references: [id], onDelete: SetNull)
}
